3장 기술적 토대 

- 우린 웹을 서로 연결된 페이지 묶음으로 생각하지만, 
실제로는 웹 서버와 웹 클라이언ㅌ(브라우저)간의 대화 모음에 더 가깝다.

- JSON
기본적으로 데이터를 자바스크립트 객체로 최적화시키는 문법 명세라고 알고 있으면 된다. 
JSON은 자바스크립트와 AJAX 요청에 확실하게 최적화되어 있어서 
JSON 형태로 데이터를 반환하는 웹 기반 API에 많이 사용된다. 
JSON은 XML보다 자바스크립트로 파싱하기 쉽고 빠르다. 
그래서 D3도 JSON과 함께 사용할 때 더 잘 동작한다. 

ex)
{
	"kind": "grape",
	"color": "red",
	"quantity": 12,
	"tasty": true
}

CSS와 차이점이라면 프로퍼티 명을 문자열로 만들기 위해서 큰따옴표 ("")를 사용한다. 
또한 JSON은 다른 자바스크립트 객체와 마찬가지로 객체를 변수에 저장할 수 있다. 

var jsonFruit = {
	"kind": "grape"
};

- 함수 단위의 유효범위
프로그래밍에서 변수 유효범위란 어떤 변수가 어떤 컨텍스트에서 접근 가능한지를 알려 주는 개념이다. 
많은 언어들이 블록 레벨 유효범위를 사용한다. 
이 유효범위를 따르면 변수는 코드의 해당 '블록'에서만 존재한다. 
블록은 부통 중괄호({})로 표현한다. 
하지만 자바스크립트에서는 함수 레벨에서 유효범위를 갖는다. 
즉, 자바스크립트는 블록이 아니라 변수가 속한 함수 기준으로 접근을 해야한다. 

- 전역으로 변수를 추가하면 문제가 뭘까?
처음 시작할 때는 아무런 문제도 없다. 
하지만 프로젝트가 복잡해지고, 
D3가 아닌 자바스크립트 코드(jQuery 등) 라이브러리에서 동명의 변수를 사용하고 있다면 
충돌할 수 있는 가능성이 있기 때문이다. 

변수 선언에 관한 문제는 두 가지 방법으로 쉽게 해결할 수 있다. 

1. 함수 안에서만 변수를 선언한다. 
보통은 실현하기 어렵지만, 함수 레벨 유효 범위는 다른 변수와의 충돌을 막아준다. 
2. 전역 객체를 하나 선언하고, 
그 객체에 필요한 전역 변수를 모두 추가한다. 
ex)
var Vis = {};
Vis.zebra = "still pretty amazing";
Vis.monkeys = "too funny LOL";

- SVG
*SVG 파일은 어도비 일러스트레이터 같은 벡터 드로잉 소프트웨어에서도 
생성할 수 있다. 하지만 여기서는 코드로 SVG를 생성하는 법을 배워보겠다. 

SVG 문서요소 
SVG는 텍스트 기반의 이미지 포맷이다. 
SVG 이미지는 HTML과 비슷한 마크업 코드를 써서 정의한다. 
그래서 SVG코드는 HTML문서에 직접 포함시키거나 동적으로 DOM에 삽입할 수 있다. 

1. SVG 문서 요소를 만든다. (canvas와 비슷)
ex)
<svg width = "500" height = "50"> </svg>

2. 뭔가를 그린다. 
<rect x = "0" y ="0" width = "500" height = "50"/> 
*여기서 '/>'는 스스로 닫는 태그. 

3. 스타일을 입힌다. 

	- fill : 바탕생을 지정한다. 
	- strock : 선색을 지정한다.
	- strock-width : 선의 두께를 지정한다. 일반적으로 단위는 픽셀이다. 
	- opacity : 0.0 ~ 1.0
	- font-family 
	- font-size

ex)
<circle cx = "25" cy = "25" r = "22" class = "pumpkin"/>
// CSS파일의 pumpkin 스타일값을 읽어와서 적용해준다. 

이런식으로 클래스를 사용하면 몇 가지 이점이 있다. 
1. 스타일 하나를 여러 문서 요소에 적용할 수 있다.
2. 인라인 속성보다 CSS 코드 읽기가 더 쉽다. 
3. 따라서 유지보수가 쉽고 디자인 변경 작업을 좀 더 빨리 할 수 있다. 

하지만 !
이렇게 하면 문제점도 있다. 
fill, stroke, stroke-width는 모두 CSS 속성이 아니기 때문이다. 
단지 SVG 속성을 적용하기 위해서 CSS 선택자를 사용했을 뿐이다. 
이때 해당 CSS 파이렝 아래와 같이 표기하면 좀 덜할 것이다. 

ex)
svg .pumpkin{
	.
	.
	.
}

SVG에는 포토샵 같은 '레이어'가 엇ㅂ어서 진정한 의미의 깊이 개념은 없다. 
그런데 여러 도형을 그려 보면 도형이 서로 겹쳐지는데, 말 그대로 그려진 순서대로 덮어지느 ㄴ것이다. 

